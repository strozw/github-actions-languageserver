import { error } from "@actions/languageservice/log";
import { errorStatus } from "./error";
import { getUsername } from "./username";
export async function getRepoPermission(octokit, cache, repo) {
    const username = await getUsername(octokit, cache);
    const permission = await cache.get(`${repo.owner}/${repo.name}/${username}/permission`, undefined, () => fetchRepoPermission(octokit, repo, username));
    switch (permission) {
        case "admin":
        case "write":
        case "read":
        case "none":
            return permission;
        default:
            error(`Unknown permission: ${permission}`);
            return "none";
    }
}
async function fetchRepoPermission(octokit, repo, username) {
    try {
        const res = await octokit.request("GET /repos/{owner}/{repo}/collaborators/{username}/permission", {
            owner: repo.owner,
            repo: repo.name,
            username: username
        });
        const permission = res.data?.permission;
        return permission;
    }
    catch (e) {
        const status = errorStatus(e);
        if (status === 404 || status === 403) {
            return "none";
        }
        throw e;
    }
}
//# sourceMappingURL=repo-permission.js.map