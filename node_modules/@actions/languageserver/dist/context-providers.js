import { getSecrets } from "./context-providers/secrets";
import { getStepsContext } from "./context-providers/steps";
import { getVariables } from "./context-providers/variables";
export function contextProviders(client, repo, cache) {
    if (!repo || !client) {
        return { getContext: () => Promise.resolve(undefined) };
    }
    const getContext = async (name, defaultContext, workflowContext, mode) => {
        switch (name) {
            case "secrets":
                return await getSecrets(workflowContext, client, cache, repo, defaultContext, mode);
            case "vars":
                return await getVariables(workflowContext, client, cache, repo, defaultContext);
            case "steps":
                return await getStepsContext(client, cache, defaultContext, workflowContext);
        }
    };
    return { getContext };
}
//# sourceMappingURL=context-providers.js.map