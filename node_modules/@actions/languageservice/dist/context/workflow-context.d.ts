import { WorkflowTemplate } from "@actions/workflow-parser";
import { Job, ReusableWorkflowJob, Step } from "@actions/workflow-parser/model/workflow-template";
import { TemplateToken } from "@actions/workflow-parser/templates/tokens/template-token";
export interface WorkflowContext {
    uri: string;
    template: WorkflowTemplate | undefined;
    /** If the context is for a position within a regular job, this will be the job */
    job?: Job;
    /** If the context is for a position within a reusable workflow job, this will be the reusable workflow job */
    reusableWorkflowJob?: ReusableWorkflowJob;
    /** If the context is for a position within a step, this will be the step */
    step?: Step;
}
export declare function getWorkflowContext(uri: string, template: WorkflowTemplate | undefined, tokenPath: TemplateToken[]): WorkflowContext;
//# sourceMappingURL=workflow-context.d.ts.map