import { TemplateToken } from "@actions/workflow-parser/templates/tokens/index";
import { FileProvider } from "@actions/workflow-parser/workflows/file-provider";
import { Position, TextDocument } from "vscode-languageserver-textdocument";
import { CompletionItem } from "vscode-languageserver-types";
import { ContextProviderConfig } from "./context-providers/config";
import { ValueProviderConfig } from "./value-providers/config";
export declare function getExpressionInput(input: string, pos: number): string;
export type CompletionConfig = {
    valueProviderConfig?: ValueProviderConfig;
    contextProviderConfig?: ContextProviderConfig;
    fileProvider?: FileProvider;
};
export declare function complete(textDocument: TextDocument, position: Position, config?: CompletionConfig): Promise<CompletionItem[]>;
export declare function getExistingValues(token: TemplateToken | null, parent: TemplateToken): Set<string> | undefined;
//# sourceMappingURL=complete.d.ts.map