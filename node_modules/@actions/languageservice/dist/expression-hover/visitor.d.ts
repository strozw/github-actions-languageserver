import { DescriptionDictionary } from "@actions/expressions";
import { Binary, ContextAccess, Expr, ExprVisitor, FunctionCall, Grouping, IndexAccess, Logical, Unary } from "@actions/expressions/ast";
import { FunctionDefinition } from "@actions/expressions/funcs/info";
import { Pos, Range } from "@actions/expressions/lexer";
export type HoverResult = undefined | {
    label: string;
    description?: string;
    function: boolean;
    range: Range;
};
export declare class HoverVisitor implements ExprVisitor<HoverResult> {
    private pos;
    private context;
    private functions;
    private ignorePosCheck;
    constructor(pos: Pos, context: DescriptionDictionary, functions: Map<string, FunctionDefinition>);
    hover(n: Expr): HoverResult;
    visitLiteral(): HoverResult;
    visitUnary(unary: Unary): HoverResult;
    visitBinary(binary: Binary): HoverResult;
    visitLogical(logical: Logical): HoverResult;
    visitGrouping(grouping: Grouping): HoverResult;
    visitContextAccess(contextAccess: ContextAccess): HoverResult;
    visitIndexAccess(indexAccess: IndexAccess): HoverResult;
    visitFunctionCall(functionCall: FunctionCall): HoverResult;
}
//# sourceMappingURL=visitor.d.ts.map